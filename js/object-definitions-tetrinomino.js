// Generated by CoffeeScript 1.9.3
var Polyomino, Tetromino,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Tetromino = (function() {
  function Tetromino(blocktype) {
    this.blocktype = blocktype;
  }

  Tetromino.prototype.move = function(blockspace) {
    return consol.log(this.id + ' moved #{blockspace} spaces.');
  };

  return Tetromino;

})();

Polyomino = (function(superClass) {
  extend(Polyomino, superClass);

  function Polyomino() {
    return Polyomino.__super__.constructor.apply(this, arguments);
  }

  Polyomino.prototype.template = function() {
    return '<div class="tetromino i-block freefall"> <span></span><span></span><span></span><span></span> </div>';
  };

  Polyomino.prototype.name = function(name) {
    return 'polyblocker';
  };

  return Polyomino;

})(Tetromino);
