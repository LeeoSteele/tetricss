// Generated by CoffeeScript 1.9.3
(function() {
  var Polyomino, Tetromino, blockId,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  blockId = 1;

  Tetromino = (function() {
    function Tetromino(blocktype) {
      this.blocktype = blocktype;
    }

    Tetromino.prototype.blockId = function(blockId) {
      var blockid;
      return blockid = blockId;
    };

    Tetromino.prototype.move = function(blockspace) {
      return consol.log(this.id + ' moved #{blockspace} spaces.');
    };

    Tetromino.prototype.direction = function(direction) {
      return console.log('moving ' + direction);
    };

    Tetromino.prototype.active = function() {
      return true;
    };

    return Tetromino;

  })();

  Polyomino = (function(superClass) {
    extend(Polyomino, superClass);

    function Polyomino() {
      return Polyomino.__super__.constructor.apply(this, arguments);
    }

    Polyomino.prototype.blockId = function() {
      return Polyomino.__super__.blockId.call(this, blockId);
    };

    Polyomino.prototype.move = function() {
      consol.log('Polyomino moves');
      return Polyomino.__super__.move.call(this, 1);
    };

    Polyomino.prototype.direction = function() {
      return Polyomino.__super__.direction.call(this, 'down');
    };

    Polyomino.prototype.active = function() {
      return true;
    };

    return Polyomino;

  })(Tetromino);

  new Polyomino({
    blocktype: 'polyomino'
  });

}).call(this);
